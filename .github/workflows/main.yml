name: ci-cd

on:
  push:
    branches:
      - 'bmiller/gha'
  pull_request:
    branches:
      - 'bmiller/gha'

env:
  TEST_TAG: dbhive/main-prod:test
  LATEST_TAG: dbhive/main-prod:latest
  TEST_DB: ${{ secrets.TEST_DB }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build and export to Docker
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     load: true
      #     tags: ${{ env.TEST_TAG }}

      # - name: Test
      #   run: docker-compose -f docker-compose-test.yml up --exit-code-from test

      # - name: Build and push to DockerHub
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.LATEST_TAG }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dbhive
          IMAGE_TAG: main-prod
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
